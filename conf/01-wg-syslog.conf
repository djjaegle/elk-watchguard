input {
  udp {
    port => 5140
    type => syslog
  }
}

filter {
  if [type] == "syslog" {
    grok {
      match => {"message" => [
        "\<%{INT:rec_code}\>%{SYSLOGTIMESTAMP:syslog_tstamp} %{IPORHOST:syslog_host} %{DATA:fw_msg_type}: msg_id=\"%{DATA:msg_id}\" %{NOTSPACE:fw_action} %{NOTSPACE:fw_source} %{NOTSPACE:fw_target} %{INT:unknown_1} (?<protocol>icmp|tcp|udp) %{INT:unknown_2} %{INT:unknown_3} %{IP:source_ip} %{IP:target_ip} %{INT:source_port} %{INT:target_port} %{GREEDYDATA:msg_tail}",
        "\<%{INT:rec_code}\>%{SYSLOGTIMESTAMP:syslog_tstamp} %{IPORHOST:syslog_host} %{DATA:fw_msg_type}: msg_id=\"%{DATA:msg_id}\" %{NOTSPACE:fw_action} %{NOTSPACE:fw_source} %{NOTSPACE:fw_target} %{INT:unknown_1} (?<protocol>icmp|tcp|udp) %{INT:unknown_2} %{INT:unknown_3} %{IP:source_ip} %{IP:target_ip} %{GREEDYDATA:msg_tail}",
        "\<%{INT:rec_code}\>%{SYSLOGTIMESTAMP:syslog_tstamp} %{IPORHOST:syslog_host} %{DATA:fw_msg_type}: msg_id=\"%{DATA:msg_id}\" %{NOTSPACE:fw_action} %{NOTSPACE:fw_source} %{NOTSPACE:fw_target} (?<protocol>icmp|tcp|udp) %{IP:source_ip} %{IP:target_ip} %{INT:source_port} %{INT:target_port} %{GREEDYDATA:msg_tail}",
        "\<%{INT:rec_code}\>%{SYSLOGTIMESTAMP:syslog_tstamp} %{IPORHOST:syslog_host} %{DATA:fw_msg_type}: msg_id=\"%{DATA:msg_id}\" %{NOTSPACE:fw_action} %{NOTSPACE:fw_source} %{NOTSPACE:fw_target} (?<protocol>icmp|tcp|udp) %{IP:source_ip} %{IP:target_ip} %{GREEDYDATA:msg_tail}"
        ]}
      overwrite => [ "rec_code", "syslog_tstamp", "syslog_host", "fw_msg_type", "msg_id", "fw_action", "fw_source", "fw_target", "protocol", "source_ip", "target_ip" ]
    }
    kv {
      allow_duplicate_values => false
      source => "msg_tail"
    }
  }
}

output {
  elasticsearch { hosts => ["localhost:9200"] }
  stdout { codec => rubydebug }
}